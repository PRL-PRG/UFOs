MkInclude = $(R_HOME)/etc${R_ARCH}/Makeconf

#TODO: detect from environment instead?
DEBUGGING=1
#DEBUGGING=0

#PKG_CXXFLAGS =
#PKG_CPPFLAGS = -pthread
PKG_LIBS = 
ifeq ($(DEBUGGING), 1)
	CFLAGS = -Og -ggdb -fPIC -Wall -Werror
	PKG_CFLAGS = -DMAKE_SURE -g -Og -Wall -Werror
else
	CFLAGS = -O2 -fpic -Wall -Werror
	PKG_CFLAGS = -DMAKE_SURE -O2 -Wall -Werror
endif

SOURCES_C = init.c ufos.c R_ext.c

OBJECTS = $(SOURCES_C:.c=.o)

#SUBDIRS = mappedMemory mappedMemory/blake3
#SUBLIBS = $(SUBDIRS:=.a)
SUBDIRS = rust
SUBLIBS = rust/ufos_c/libufos_c.a

all: $(SHLIB)
$(SHLIB): $(OBJECTS) sublibs

sublibs: subclean sublibraries

sublibraries: subclean
	@for d in $(SUBDIRS); do \
	  (cd $${d} && CFLAGS="$(CFLAGS)" CXXFLAGS="$(CXXFLAGS)" MAKE="$(MAKE) -f \"$(MkInclude)\" -f Makefile" $(MAKE) -f "$(MkInclude)" -f Makefile library) || exit 1; \
	done

clean: subclean
	@-rm -rf .libs _libs
	@-rm -f *.o $(SHLIB)

subclean:
	@-rm -f *.a
	@for d in $(SUBDIRS); do \
	  (cd $${d} && MkInclude="$(MkInclude)" $(MAKE) clean) || exit 1; \
	done

init.o: init.c ufos.h mappedMemory/userfaultCore.h
ufoTest.o: ufos.c ufos.h mappedMemory/userfaultCore.h
